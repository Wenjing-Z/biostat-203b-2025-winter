---
title: "Biostat 203B Homework 3"
subtitle: "Due Feb 21 @ 11:59PM"
author: "Wenjing Zhou and 806542441"
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: false
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
---

Display machine information for reproducibility:

```{r}
sessionInfo()
```

Load necessary libraries (you can add more as needed).

```{r setup}
library(arrow)
library(gtsummary)
library(memuse)
library(pryr)
library(R.utils)
library(tidyverse)
```

Display your machine memory.

```{r}
memuse::Sys.meminfo()
```

In this exercise, we use tidyverse (ggplot2, dplyr, etc) to explore the [MIMIC-IV](https://physionet.org/content/mimiciv/3.1/) data introduced in [homework 1](https://ucla-biostat-203b.github.io/2025winter/hw/hw1/hw1.html) and to build a cohort of ICU stays.

## Q1. Visualizing patient trajectory

Visualizing a patient's encounters in a health care system is a common task in clinical data analysis. In this question, we will visualize a patient's ADT (admission-discharge-transfer) history and ICU vitals in the MIMIC-IV data.

### Q1.1 ADT history

A patient's ADT history records the time of admission, discharge, and transfer in the hospital. This figure shows the ADT history of the patient with `subject_id` 10001217 in the MIMIC-IV data. The x-axis is the calendar time, and the y-axis is the type of event (ADT, lab, procedure). The color of the line segment represents the care unit. The size of the line segment represents whether the care unit is an ICU/CCU. The crosses represent lab events, and the shape of the dots represents the type of procedure. The title of the figure shows the patient's demographic information and the subtitle shows top 3 diagnoses.

![](10001217_adt.png) Do a similar visualization for the patient with `subject_id` 10063848 using ggplot.

Hint: We need to pull information from data files `patients.csv.gz`, `admissions.csv.gz`, `transfers.csv.gz`, `labevents.csv.gz`, `procedures_icd.csv.gz`, `diagnoses_icd.csv.gz`, `d_icd_procedures.csv.gz`, and `d_icd_diagnoses.csv.gz`. For the big file `labevents.csv.gz`, use the Parquet format you generated in Homework 2. For reproducibility, make the Parquet folder `labevents_pq` available at the current working directory `hw3`, for example, by a symbolic link. Make your code reproducible.

**Solution:**

```{r}
#| eval: false
library(readr)
library(lubridate)
library(scales)   # for better date formatting on the x-axis

# For reproducibility
set.seed(123)

# ------------------------------
# 1. Read Data Files
# ------------------------------

admissions_tble <- read_csv("~/mimic/hosp/admissions.csv.gz")
transfers <- read_csv("~/mimic/hosp/transfers.csv.gz")

labevents        <- read_csv("~/mimic/hosp/labevents.csv.gz", col_select = c("subject_id", "", "charttime", "valuenum") 
                             
labevents_tble <- open_dataset("labevents_pq",format = "parquet")

procedures_icd   <- read_csv("~/mimic/hosp/procedures_icd.csv.gz")
diagnoses_icd    <- read_csv("~/mimic/hosp/diagnoses_icd.csv.gz")
d_icd_procedures <- read_csv("~/mimic/hosp/d_icd_procedures.csv.gz")
d_icd_diagnoses  <- read_csv("~/mimic/hosp/d_icd_diagnoses.csv.gz")

```

```{r}
library(dplyr)
library(readr)
library(arrow)

# 设置目标 subject_id
subject_id_target <- 10001217


# patients <- read_csv("patients.csv.gz")
patients <- read_csv("~/mimic/hosp/patients.csv.gz")
pt_info <- patients %>%
  select(subject_id, gender, anchor_age) %>%
  filter(subject_id == subject_id_target)
  
# 查看基本信息
print(pt_info)
```
```{r}
admissions <- read_csv("~/mimic/hosp/admissions.csv.gz", 
                       col_types = cols(
                         admittime = col_datetime(),
                         dischtime = col_datetime()
                       ))
pt_adm <- admissions %>%
  filter(subject_id == subject_id_target) %>%
  select(subject_id, hadm_id, race) %>%
  distinct(subject_id, .keep_all = TRUE) #keep one record
  
print(pt_adm)
```

```{r}
# -----------------------------
# 3. 读取 transfers.csv.gz
# -----------------------------
# transfers 中包含病人在住院期间的转科记录，注意其中的 transfertime
transfers <- read_csv("~/mimic/hosp/transfers.csv.gz", 
                      col_types = cols(
                        transfertime = col_datetime()
                      ))
pt_transfers <- transfers %>%
  filter(subject_id == subject_id_target) %>%
  select(subject_id, hadm_id, careunit)
  
# 查看转科信息
print(pt_transfers)
```
```{r}
pt_labevents <- open_dataset("labevents_pq", format = "parquet") |>
  # mutate(across(where(is.integer), as.numeric)) |>
  mutate(subject_id = as.numeric(subject_id)) |>
  select(subject_id, hadm_id, storetime) |>
  filter(subject_id == subject_id_target) |>
  collect()

print(pt_labevents, width = Inf)


```
```{r}
procedures_icd <- read_csv("~/mimic/hosp/procedures_icd.csv.gz")
pt_procedures <- procedures_icd %>%
  filter(subject_id == subject_id_target) %>%
  select(subject_id, hadm_id, icd_code, chartdate)
  
print(pt_procedures)
```
```{r}
# diagnoses_icd  ICD 
diagnoses_icd <- read_csv("~/mimic/hosp/d_icd_diagnoses.csv.gz")
pt_diagnoses <- diagnoses_icd %>%
  filter(icd_code %in% pt_procedures$icd_code) %>%
  select(icd_code, long_title)
  
print(pt_diagnoses)
```
```{r}
combined_data_half <- pt_transfers %>%
  left_join(pt_labevents, by = c("subject_id", "hadm_id")) %>%
  left_join(pt_procedures, by = c("subject_id", "hadm_id")) 

combined_data <- combined_data_half %>%
  left_join(pt_diagnoses, by = c("icd_code"))
print(combined_data)
```

```{r}
ggplot(combined_data,aes(x = event_time, y = event_type, color = combined_data$careunit)) +
  geom_segment(aes(xend = event_end, yend = event_type, linewidth = is_icu))+ 
  geom_point(aes(shape_lable), size = 4, na.rm = FALSE, alpha = 1) +
  scale_color_manual( values = combined_data$careunit + colors, na.translate = TRUE) +
  scale_shape_manual(values = procedure_shapes, na.translate = TRUE, drop = FALSE) +
  labs(
    title = paste("Patient", subject_id_target, ",", pt_adm$race[1], ", ", pt_info$anchor_age, "year old"),
    subtitle = paste(top3_diagnoses, collapse = "\n "),
    x = "Calendar Time",
    y = "Event Type",
    color = "Care Unit",
    shape = "Procedure"
  ) +
  theme_minimal() +
  theme(lengend.position = "bottom")
```

```{r}
library(dplyr)
library(ggplot2)

# ============================
# 1. 从已有的 final 表 combined_data 构造绘图变量
# ============================
# 例如你的 combined_data 数据框结构如下：
# subject_id | hadm_id | careunit | storetime | icd_code | chartdate | icd_version | long_title.x.x

# 基于 combined_data 增加绘图所需的变量
plot_data <- combined_data %>%
  # 定义事件开始和结束时间
  mutate(
    event_time = storetime,        # 使用 storetime 作为开始时间
    event_end  = as.POSIXct(chartdate),  # 将 chartdate 转换为时间类型（如果尚未转换）
    event_type = ("Procedure","ADT","Lab")
    # 根据 careunit 判断是否为 ICU/CCU，这里简单示例：若 careunit 包含 ICU 或 CCU，则认为是 ICU，否则 FALSE
    is_icu = ifelse(grepl("ICU|CCU", careunit, ignore.case = TRUE), TRUE, FALSE),
    # 定义点形状变量，直接使用 long_title.x.x 作为标签
    shape_lable = long_title.x.x
  )

# ============================
# 2. 定义颜色和形状映射
# ============================
# 定义护理单元颜色（根据数据实际的 careunit 值进行扩充）
unique_careunits <- unique(plot_data$careunit)
# 这里举例使用内置调色板，可自定义为命名向量
care_unit_colors <- setNames(
  RColorBrewer::brewer.pal(n = max(3, length(unique_careunits)), name = "Set2")[1:length(unique_careunits)],
  unique_careunits
)

# 定义 procedure_shapes：将 shape_lable 中不同的值映射到不同的形状
unique_shapes <- unique(plot_data$shape_lable)
# 形状可选值一般为整数，例如 15, 16, 17, ...，这里简单分配
procedure_shapes <- setNames(seq(15, length.out = length(unique_shapes)), unique_shapes)

# ============================
# 3. 计算 Top 3 Diagnoses
# ============================
# 统计 long_title.x.x 出现次数，取前三个
top3_diagnoses <- plot_data %>%
  count(long_title.x.x, sort = TRUE) %>%
  head(3) %>%
  pull(long_title.x.x)

# ============================
# 5. 绘图
# ============================
ggplot(plot_data, aes(x = event_time, y = event_type, color = careunit)) +
  # 绘制表示事件时间段的线段，粗细根据 is_icu 设置（这里用 ifelse 将 TRUE/FALSE 转为数值）
  geom_segment(aes(xend = event_end, yend = event_type, linewidth = ifelse(is_icu, 2, 1))) +
  # 绘制关键点，点的形状根据 shape_lable 进行映射
  geom_point(aes(shape = shape_lable), size = 4, na.rm = FALSE, alpha = 1) +
  scale_color_manual(values = care_unit_colors, na.translate = TRUE) +
  scale_shape_manual(values = procedure_shapes, na.translate = TRUE, drop = FALSE) +
  labs(
    title = paste("Patient", subject_id_target, ",", pt_adm$race[1], ",", pt_info$anchor_age, "years old"),
    subtitle = paste(top3_diagnoses, collapse = "\n"),
    x = "Calendar Time",
    y = "Event Type",
    color = "Care Unit",
    shape = "Procedure"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom")

```
### Q1.2 ICU stays

ICU stays are a subset of ADT history. This figure shows the vitals of the patient `10001217` during ICU stays. The x-axis is the calendar time, and the y-axis is the value of the vital. The color of the line represents the type of vital. The facet grid shows the abbreviation of the vital and the stay ID.

![](10001217_icu.png)

Do a similar visualization for the patient `10063848`.


**Solution:**
```{r}
subject <- 10063848
vitals <- c(220045, 220179, 220180, 223761, 220210)

d_items <- read_csv("~/mimic/icu/d_items.csv.gz") |>
  filter(itemid %in% vitals) %>%
  mutate(itemid = as.integer(itemid)) 

print(d_items)
```

```{r}
icuvitals <- open_dataset("chartevents_pq", format = "parquet") |>
  to_duckdb() |>
  filter(subject_id %in% subject) |>
  select(subject_id, stay_id, charttime, itemid, valuenum) |>
  left_join(d_items, by = "itemid", copy = TRUE) |>
  filter(itemid %in% vitals) |>
  select(subject_id, stay_id, charttime, itemid, valuenum, abbreviation) |>
  collect()

print(icuvitals)
```
```{r}
ggplot(data = icuvitals, aes(x = charttime, y = valuenum, color = abbreviation))+
  geom_line() +
  geom_point() +
  facet_grid(abbreviation ~ stay_id,scale = "free_x") +
  scale_x_datetime(date_labels = "%b %d %H:%M") +
  labs(
    title = paste("Patient,", subject_id_target, "ICU Stays -
 Vitals"), 
       x = NULL,
       y = NULL, 
       color = "Vital Type") +
  theme_minimal()
  theme(
    legend.position = "none",
    strip.text = element_text(size = 8)
  )
```
## Q2. ICU stays

`icustays.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/icustays/>) contains data about Intensive Care Units (ICU) stays. The first 10 lines are

```{bash}
zcat < ~/mimic/icu/icustays.csv.gz | head
```

### Q2.1 Ingestion

Import `icustays.csv.gz` as a tibble `icustays_tble`.

```{r}
library(readr)

file_path <- "~/mimic/icu/icustays.csv.gz"

icustays_tble <- read_csv(file_path)

head(icustays_tble)
```

### Q2.2 Summary and visualization

How many unique `subject_id`? Can a `subject_id` have multiple ICU stays? Summarize the number of ICU stays per `subject_id` by graphs.

**Solution:**
```{r}
library(dplyr)
library(ggplot2)

# Count the number of unique subject_id
unique_subjects <- icustays_tble %>%
  summarise(unique_subjects = n_distinct(subject_id))
print(unique_subjects)
```
There are 65366 unique `subject_id` in the `icustays_tble`.

```{r}
# Check if a subject_id can have multiple ICU stays
subject_stays <- icustays_tble %>%
  group_by(subject_id) %>%
  summarise(num_stays = n())
print(subject_stays)
```
Yes, a `subject_id` can have multiple ICU stays.

```{r}

# Plot the number of ICU stays per subject_id
ggplot(subject_stays, aes(x = num_stays)) +
  geom_bar() +
  labs(title = "Number of ICU Stays per Subject ID",
       x = "Number of ICU Stays",
       y = "Count of Subject IDs") +
  theme_minimal()
```
The graph shows the distribution of the number of ICU stays per `subject_id`. Most patients have only one ICU stay, but there are a few patients with multiple ICU stays.


## Q3. `admissions` data

Information of the patients admitted into hospital is available in `admissions.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/admissions/> for details of each field in this file. The first 10 lines are

```{bash}
zcat < ~/mimic/hosp/admissions.csv.gz | head
```

### Q3.1 Ingestion

Import `admissions.csv.gz` as a tibble `admissions_tble`.

**Solution:**

```{r}
library(readr)

file_path <- "~/mimic/hosp/admissions.csv.gz"

admissions_tble <- read_csv(file_path)

head(admissions_tble)

```

### Q3.2 Summary and visualization

Summarize the following information by graphics and explain any patterns you see.

-   number of admissions per patient\
-   admission hour (anything unusual?)\
-   admission minute (anything unusual?)\
-   length of hospital stay (from admission to discharge) (anything unusual?)

According to the [MIMIC-IV documentation](https://mimic.mit.edu/docs/iv/about/concepts/#date-shifting),

> All dates in the database have been shifted to protect patient confidentiality. Dates will be internally consistent for the same patient, but randomly distributed in the future. Dates of birth which occur in the present time are not true dates of birth. Furthermore, dates of birth which occur before the year 1900 occur if the patient is older than 89. In these cases, the patient’s age at their first admission has been fixed to 300.

**Solution: **
```{r}
# 1. Number of admissions per patient
admissions_per_patient <- admissions_tble %>%
  group_by(subject_id) %>%
  summarise(num_admissions = n()) %>%
  arrange(desc(num_admissions))
          
print(admissions_per_patient)

ggplot(admissions_per_patient, aes(x = num_admissions)) +
  geom_bar() +
  labs(title = "Number of Admissions per Patient",
       x = "Number of Admissions",
       y = "Count of Patients") +
  theme_minimal()
```

This graph shows the distribution of the number of admissions per patient. The x-axis has a long tail, indicating that most patients have only a few admissions, but there are a small number of patients with many more admissions.

```{r}
# 2. Admission hour
admissions_tble$admission_hour <- as.numeric(format(as.POSIXct(admissions_tble$admittime), "%H"))

# Plot admission hours
ggplot(admissions_tble, aes(x = admission_hour)) +
  geom_bar() +
  labs(title = "Admissions per Hour of the Day",
       x = "Hour of Admission",
       y = "Number of Admissions") +
  theme_minimal()
```

The graph shows the distribution of admissions by hour of the day. There is a peak in admissions around 8 AM, which is likely due to the start of the day shift in hospitals. There are also peaks around 8 PM and 4 AM, which may be due to emergency admissions.
```{r}
# 3. Admission minute
admissions_tble$admission_minute <- as.numeric(format(as.POSIXct(admissions_tble$admittime), "%M"))

# Plot admission minutes
ggplot(admissions_tble, aes(x = admission_minute)) +
  geom_bar() +
  labs(title = "Admissions per Minute",
       x = "Minute of Admission",
       y = "Number of Admissions") +
  theme_minimal()
```
The graph shows the distribution of admissions by minute of the hour. There is a peak at 0 minutes, which is likely due to the rounding of admission times to the nearest hour. There are also peaks at 30 and 15 minutes, which may be due to the rounding of admission times to the nearest half-hour or quarter-hour.

```{r}
# 4. Length of hospital stay
admissions_tble$admittime <- as.POSIXct(admissions_tble$admittime)
admissions_tble$dischtime <- as.POSIXct(admissions_tble$dischtime)

# Calculate the length of hospital stay in days
admissions_tble$length_of_stay <- as.numeric(difftime(admissions_tble$dischtime, admissions_tble$admittime, units = "days"))

# Plot the length of stay
ggplot(admissions_tble, aes(x = length_of_stay)) +
  geom_histogram(binwidth = 1) +
  labs(title = "Length of Hospital Stay",
       x = "Length of Stay (in days)",
       y = "Number of Admissions") +
  theme_minimal()
```
The graph shows the distribution of the length of hospital stay. Most patients have a short length of stay, but there are a small number of patients with a very long length of stay. This is likely due to the fact that the MIMIC-IV database contains data from a large number of patients, some of whom may have had very long hospital stays.

## Q4. `patients` data

Patient information is available in `patients.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/patients/> for details of each field in this file. The first 10 lines are

```{bash}
zcat < ~/mimic/hosp/patients.csv.gz | head
```

### Q4.1 Ingestion

Import `patients.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/patients/>) as a tibble `patients_tble`.

```{r}
library(readr)

file_path <- "~/mimic//hosp/patients.csv.gz"

patients_tble <- read_csv(file_path)

head(patients_tble)
```

### Q4.2 Summary and visualization

Summarize variables `gender` and `anchor_age` by graphics, and explain any patterns you see.

```{r}
# Summary of gender (distribution of male and female patients)
ggplot(patients_tble, aes(x = gender)) +
  geom_bar() +
  labs(title = "Gender Distribution of Patients",
       x = "Gender",
       y = "Count of Patients") +
  theme_minimal()
```
This graph shows the distribution of gender among patients. Female patients are slightly more than male patients.

```{r}
# Summary of anchor_age (age distribution of patients)
ggplot(patients_tble, aes(x = anchor_age)) +
  geom_histogram(binwidth = 1) +
  labs(title = "Age Distribution of Patients (Anchor Age)",
       x = "Anchor Age",
       y = "Count of Patients") +
  theme_minimal()
```
This graph shows the distribution of age among patients. Most patients are between 50 and 80 years old, with a peak around 60 years old and 20 years old. There are very few patients over 90 years old.

## Q5. Lab results

`labevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/labevents/>) contains all laboratory measurements for patients. The first 10 lines are

```{bash}
zcat < ~/mimic/hosp/labevents.csv.gz | head
```

`d_labitems.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/d_labitems/>) is the dictionary of lab measurements.

```{bash}
zcat < ~/mimic/hosp/d_labitems.csv.gz | head
```

We are interested in the lab measurements of creatinine (50912), potassium (50971), sodium (50983), chloride (50902), bicarbonate (50882), hematocrit (51221), white blood cell count (51301), and glucose (50931). Retrieve a subset of `labevents.csv.gz` that only containing these items for the patients in `icustays_tble`. Further restrict to the last available measurement (by `storetime`) before the ICU stay. The final `labevents_tble` should have one row per ICU stay and columns for each lab measurement.

![](labevents_tble.png)

Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `labevents_pq` folder available at the current working directory `hw3`, for example, by a symbolic link.

#### Solution


```{r}
library(readr)
library(dplyr)


# Specify the itemids for the required lab tests
dlabitems_tble <- 
  read_csv("~/mimic/hosp/d_labitems.csv.gz", show_col_types = FALSE) %>%
  filter(itemid %in% c(
    50912, 
    50971, 
    50983, 
    50902, 
    50882, 
    51221, 
    51301, 
    50931
    )) %>%
  mutate(itemid = as.integer(itemid)) %>%
  print(width = Inf)
```
```{r}
# load necessary libraries
library(dplyr)
library(readr)
library(lubridate)
library(data.table)


# Load the icustays data
icustays_file_path <- "~/mimic/icu/icustays.csv.gz"
icustays_tble <- read_csv(icustays_file_path)
icustays_tble <- icustays_tble %>%
  mutate(subject_id = as.integer(subject_id))
```

```{r}
# Load the labevents data
labevents_tble <- open_dataset("labevents_pq",format = "parquet") |>
  # creat a virtual table in DuckDB
  to_duckdb() |>
  # only variables subject_id, itemid, storetime, valuenum are needed
  select(subject_id, itemid, storetime, valuenum) |>
  # restrict to itemid of interest
  filter(itemid %in% dlabitems_tble$itemid) |>
  # put in the intime of ICU stays, copy = Ture to join data from diff src
  left_join(
    select(icustays_tble, subject_id, stay_id, intime),
    by = c("subject_id"),
    copy = TRUE 
    ) |>
  # only keep lab items available before this ICU stay
  filter(storetime < intime) |>
  # group by itemid
  group_by(subject_id, stay_id, itemid) |>
  # only keep the last storetime for each item before intime
  slice_max(storetime, n = 1) |>
  # do not need storetime and intime anymore
  select(-storetime, -intime) |>
  ungroup() |>
  pivot_wider(names_from = itemid, values_from = valuenum) |>
  #more informative column names
  rename_at(
    vars(as.character(dlabitems_tble$itemid)),
    ~str_to_lower(dlabitems_tble$label)
    ) |>
  rename(wbc = `white blood cells`) |>
  #force computation
  show_query() |>
  collect() |>
  # sort for grading purpose
  arrange(subject_id, stay_id) |>
  relocate(subject_id, stay_id) |>
  print(width = Inf)
```









## Q6. Vitals from charted events

`chartevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/chartevents/>) contains all the charted data available for a patient. During their ICU stay, the primary repository of a patient’s information is their electronic chart. The `itemid` variable indicates a single measurement type in the database. The `value` variable is the value measured for `itemid`. The first 10 lines of `chartevents.csv.gz` are

```{bash}
zcat < ~/mimic/icu/chartevents.csv.gz | head
```

`d_items.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/d_items/>) is the dictionary for the `itemid` in `chartevents.csv.gz`.

```{bash}
zcat < ~/mimic/icu/d_items.csv.gz | head
```

We are interested in the vitals for ICU patients: heart rate (220045), systolic non-invasive blood pressure (220179), diastolic non-invasive blood pressure (220180), body temperature in Fahrenheit (223761), and respiratory rate (220210). Retrieve a subset of `chartevents.csv.gz` only containing these items for the patients in `icustays_tble`. Further restrict to the first vital measurement within the ICU stay. The final `chartevents_tble` should have one row per ICU stay and columns for each vital measurement.

![](chartevents_tble.png)

Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `chartevents_pq` folder available at the current working directory, for example, by a symbolic link.

#### Solution

```{r}
# Specify the itemids for the required lab tests
d_items <- 
  read_csv("~/mimic/icu/d_items.csv.gz", show_col_types = FALSE) %>%
  filter(itemid %in% c(
    220045,
    220179,
    220180,
    223761,
    220210
    )) %>%
  mutate(itemid = as.integer(itemid)) %>%
  print(width = Inf)
```

```{r}
chartevents_tble <- open_dataset("chartevents_pq", 
                            format = "parquet") |>
  to_duckdb() |>
  select(subject_id, itemid, storetime, valuenum) |>
  filter(itemid %in%d_items$itemid) %>%
  mutate(subject_id = as.integer(subject_id)) %>%
  left_join(
    select(icustays_tble, subject_id, stay_id, intime, outtime), 
    by = c("subject_id"),
    copy = TRUE
    ) |>
  filter(storetime > intime & storetime < outtime) |>
  group_by(subject_id, stay_id, itemid) |>
  slice_min(storetime, n = 1) |>
  select(-storetime, -intime, -outtime) |>
  ungroup() |>
  pivot_wider(names_from = itemid, values_from = valuenum) |>
  rename_at(
    vars(as.character(d_items$itemid)),
    ~str_to_lower(d_items$label)
    ) |>
  show_query() |>
  collect() |>
  arrange(subject_id, stay_id) |>
  relocate(subject_id, stay_id) |>
  print(width = Inf)
```


## Q7. Putting things together

Let us create a tibble `mimic_icu_cohort` for all ICU stays, where rows are all ICU stays of adults (age at `intime` \>= 18) and columns contain at least following variables

-   all variables in `icustays_tble`\
-   all variables in `admissions_tble`\
-   all variables in `patients_tble`
-   the last lab measurements before the ICU stay in `labevents_tble`
-   the first vital measurements during the ICU stay in `chartevents_tble`

The final `mimic_icu_cohort` should have one row per ICU stay and columns for each variable.

![](mimic_icu_cohort.png)

```{r}
library(tidyr)
library(lubridate)
library(arrow)

patients_tble <- read_csv("~/mimic/hosp/patients.csv.gz")
admissions_tble <- read_csv("~/mimic/hosp/admissions.csv.gz")

icu_cohort <- icustays_tble %>%
  left_join(patients_tble, by = "subject_id") %>%
  filter(anchor_age >= 18)

icu_cohort <- icu_cohort %>%
  left_join(admissions_tble, by = c ("subject_id", "hadm_id"))


icu_cohort <- icu_cohort %>%
  left_join(chartevents_tble, by = c ("subject_id", "stay_id")) 


mimic_icu_cohort <- icu_cohort %>%
  left_join(labevents_tble,c ("subject_id", "stay_id")) 
  
mimic_icu_cohort <- mimic_icu_cohort 

print(head(mimic_icu_cohort))
```



## Q8. Exploratory data analysis (EDA)

Summarize the following information about the ICU stay cohort `mimic_icu_cohort` using appropriate numerics or graphs:

-   Length of ICU stay `los` vs demographic variables (race, insurance, marital_status, gender, age at intime)

-   Length of ICU stay `los` vs the last available lab measurements before ICU stay

-   Length of ICU stay `los` vs the first vital measurements within the ICU stay

-   Length of ICU stay `los` vs first ICU unit
